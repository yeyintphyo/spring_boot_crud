package com.example.employee.mapper;

import com.example.employee.entity.Employee;
import com.example.employee.entity.EmployeeExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;
@Mapper
public interface EmployeeMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee
	 * @mbggenerated  Fri Sep 22 13:44:00 MMT 2017
	 */
	@SelectProvider(type = EmployeeSqlProvider.class, method = "countByExample")
	int countByExample(EmployeeExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee
	 * @mbggenerated  Fri Sep 22 13:44:00 MMT 2017
	 */
	@DeleteProvider(type = EmployeeSqlProvider.class, method = "deleteByExample")
	int deleteByExample(EmployeeExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee
	 * @mbggenerated  Fri Sep 22 13:44:00 MMT 2017
	 */
	@Delete({ "delete from `employee`", "where `employee_id` = #{employeeId,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long employeeId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee
	 * @mbggenerated  Fri Sep 22 13:44:00 MMT 2017
	 */
	@Insert({ "insert into `employee` (`employee_id`, `employee_name`, ", "`address`, `gender`, ",
			"`remark`, `email`, `password`, ", "`phone`, `role`)",
			"values (#{employeeId,jdbcType=BIGINT}, #{employeeName,jdbcType=VARCHAR}, ",
			"#{address,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, ",
			"#{remark,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, ",
			"#{phone,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})" })
	int insert(Employee record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee
	 * @mbggenerated  Fri Sep 22 13:44:00 MMT 2017
	 */
	@InsertProvider(type = EmployeeSqlProvider.class, method = "insertSelective")
	int insertSelective(Employee record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee
	 * @mbggenerated  Fri Sep 22 13:44:00 MMT 2017
	 */
	@SelectProvider(type = EmployeeSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "employee_id", property = "employeeId", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "employee_name", property = "employeeName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "address", property = "address", jdbcType = JdbcType.VARCHAR),
			@Result(column = "gender", property = "gender", jdbcType = JdbcType.VARCHAR),
			@Result(column = "remark", property = "remark", jdbcType = JdbcType.VARCHAR),
			@Result(column = "email", property = "email", jdbcType = JdbcType.VARCHAR),
			@Result(column = "password", property = "password", jdbcType = JdbcType.VARCHAR),
			@Result(column = "phone", property = "phone", jdbcType = JdbcType.VARCHAR),
			@Result(column = "role", property = "role", jdbcType = JdbcType.VARCHAR) })
	List<Employee> selectByExampleWithRowbounds(EmployeeExample example, RowBounds rowBounds);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee
	 * @mbggenerated  Fri Sep 22 13:44:00 MMT 2017
	 */
	@SelectProvider(type = EmployeeSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "employee_id", property = "employeeId", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "employee_name", property = "employeeName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "address", property = "address", jdbcType = JdbcType.VARCHAR),
			@Result(column = "gender", property = "gender", jdbcType = JdbcType.VARCHAR),
			@Result(column = "remark", property = "remark", jdbcType = JdbcType.VARCHAR),
			@Result(column = "email", property = "email", jdbcType = JdbcType.VARCHAR),
			@Result(column = "password", property = "password", jdbcType = JdbcType.VARCHAR),
			@Result(column = "phone", property = "phone", jdbcType = JdbcType.VARCHAR),
			@Result(column = "role", property = "role", jdbcType = JdbcType.VARCHAR) })
	List<Employee> selectByExample(EmployeeExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee
	 * @mbggenerated  Fri Sep 22 13:44:00 MMT 2017
	 */
	@Select({ "select", "`employee_id`, `employee_name`, `address`, `gender`, `remark`, `email`, `password`, ",
			"`phone`, `role`", "from `employee`", "where `employee_id` = #{employeeId,jdbcType=BIGINT}" })
	@Results({ @Result(column = "employee_id", property = "employeeId", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "employee_name", property = "employeeName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "address", property = "address", jdbcType = JdbcType.VARCHAR),
			@Result(column = "gender", property = "gender", jdbcType = JdbcType.VARCHAR),
			@Result(column = "remark", property = "remark", jdbcType = JdbcType.VARCHAR),
			@Result(column = "email", property = "email", jdbcType = JdbcType.VARCHAR),
			@Result(column = "password", property = "password", jdbcType = JdbcType.VARCHAR),
			@Result(column = "phone", property = "phone", jdbcType = JdbcType.VARCHAR),
			@Result(column = "role", property = "role", jdbcType = JdbcType.VARCHAR) })
	Employee selectByPrimaryKey(Long employeeId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee
	 * @mbggenerated  Fri Sep 22 13:44:00 MMT 2017
	 */
	@UpdateProvider(type = EmployeeSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") Employee record, @Param("example") EmployeeExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee
	 * @mbggenerated  Fri Sep 22 13:44:00 MMT 2017
	 */
	@UpdateProvider(type = EmployeeSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") Employee record, @Param("example") EmployeeExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee
	 * @mbggenerated  Fri Sep 22 13:44:00 MMT 2017
	 */
	@UpdateProvider(type = EmployeeSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(Employee record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee
	 * @mbggenerated  Fri Sep 22 13:44:00 MMT 2017
	 */
	@Update({ "update `employee`", "set `employee_name` = #{employeeName,jdbcType=VARCHAR},",
			"`address` = #{address,jdbcType=VARCHAR},", "`gender` = #{gender,jdbcType=VARCHAR},",
			"`remark` = #{remark,jdbcType=VARCHAR},", "`email` = #{email,jdbcType=VARCHAR},",
			"`password` = #{password,jdbcType=VARCHAR},", "`phone` = #{phone,jdbcType=VARCHAR},",
			"`role` = #{role,jdbcType=VARCHAR}", "where `employee_id` = #{employeeId,jdbcType=BIGINT}" })
	int updateByPrimaryKey(Employee record);
}